@model LibraryWebSite.Models.VMBorrowing

@{
    ViewBag.Title = "CheckOut";
}

<h2>Borrow '@Model.BookName'</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>VMBorrowing</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.HiddenFor(m => m.BookID)
            @Html.HiddenFor(m => m.BorrowerID)
            @Html.LabelFor(model => model.BookName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*changed EditorFor to DisplayFor since data is read only *@
                @Html.DisplayFor(model => model.BookName, new { htmlAttributes = new { @class = "form-control" } })
                @* got rid of validation since data is read only*@
              
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BorrowerName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*changed EditorFor to DisplayFor since data is read only *@
                @Html.DisplayFor(model => model.BorrowerName, new { htmlAttributes = new { @class = "form-control" } })
                @* got rid of validation since data is read only*@

            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DueDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DueDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DueDate, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
          
                @Html.EditorFor(model => model.ReturnedDate, new { htmlAttributes = new { @class = "form-control" } })
           
        </div>*@

        @*<div class="form-group">
            @Html.LabelFor(model => model.Rating, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.Rating, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Rating, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Check this book out" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
